QUESTION:::

Given two strings str1 and str2 and below operations that can be performed on str1. 
Find minimum number of edits (operations) required to convert ‘str1’ into ‘str2’.  
Insert
Remove
Replace

---------------------------------------------------********************************************************----------------------------------------

SOLUTION::


def editDistance(str1, str2, m, n):
 
    # If first string is empty insert all characters of second string into first
    if m == 0:
        return n
 
    # If second string is empty remove all characters of first string
    if n == 0:
        return m
 
    # If last characters of two strings are same
    # Ignore last characters and get count for remaining strings.
    if str1[m-1] == str2[n-1]:
        return editDistance(str1, str2, m-1, n-1)
    return 1 + min(editDistance(str1, str2, m, n-1),    # Insert
                   editDistance(str1, str2, m-1, n),    # Remove
                   editDistance(str1, str2, m-1, n-1)    # Replace
                   )
 
str1 = "kitten"
str2 = "sitting"
print (editDistance(str1, str2, len(str1), len(str2)))
